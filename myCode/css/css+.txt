#id - на id
.class - на все классы
selector - на все селекторы
selector * - на все элементы внутри селектора
selector.class - на класс внутри селектора
.class selector - все selector(ы) в классе class
.class>li - на 1 уровень //комбинатор прямого наследования
h4 + li - первый элемент li в h4
h4 ~ li - до конца родительского блока li в элементе h4

div[class^="my"] //начинается с
div[class$="Class"] //заканчивается определённым значением
div[class*="yClas"] //совпадение в любом месте

псевдоклассы ссылок
:link - все ссылки которые небыли нажаты
:visited - все ссылки которые были нажаты

псевдоклассы действия пользователя
:hover - наведение
:active - активация
:focus - выделение

структурные псевдоклассы
li:nth-child - все элементы внутри родительского элемента
li:nth-child(2n) - каждый второй элемент родительского элемента
li:nth-child(even) - каждый третий элемент родительского элемента
li:nth-last-child(odd) - каждый второй элемент родительского элемента с конца

li:first-child - первый элемент внутри родительского

li::before - перед
li::after - перед

a[title] - все элементы "a" с атрибутами title
a[title~="myTitle"] - на элемент "a" с атрибутом значение которого разделены пробелом, где одно из значений является myTitle
a[title|="myTitle"] - на те элементы "a" начинаются с значения myTitle (myTitle-Data тоже попадёт в этот список)
a[href^="https://"] - только те "a" которые начинаются на "https://"
a[href$=".jpg"] - только те "a" которые заканчиваются на ".jpg"
a[href*=".jpg"] - все элементы "a" с указанным значением

---пример
a[href$=".png"]::after { content: '(png)'; }
<a href="pic.jpg">Изображение</a>


---пример миксина на css
.clearfix:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}
.clearfix {
  display: inline-block;
}
html[xmlns] .clearfix {
  display: block;
}
* html .clearfix {
  height: 1%;
}

--- иконка авторского права
.footer__ownership:before {
    content: '\00A9';
}

--- не применять margin к последнему элементу
.elem__point:not(:last-child) {
  margin-bottom: 10px;
}

--- фоновая картинка и сдвиг в верх на 45px
background: url("../img/1st-screen-1920x1080-dark.jpg") no-repeat;
background-position-y: -45px;

--- прилипающее меню, скользит по высоте родительского блока
font-size: 12px;
position: sticky;
top: -50px;

--- линейный гардиент элементу
.elem {
    background: url(demo.png) no-repeat 0 0 transparent;
    height: 37px;
    overflow: hidden;
    position: relative;
    width: 95px;
}

.elem::after {
    background: transparent;
    background: -moz-linear-gradient(top, rgba(255, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.1) 100%);
    background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(255, 0, 0, 0.8)), color-stop(100%, rgba(0, 0, 0, 0.1)));
    background: -webkit-linear-gradient(top, rgba(255, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.1) 100%);
    background: -o-linear-gradient(top, rgba(255, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.1) 100%);
    background: -ms-linear-gradient(top, rgba(255, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.1) 100%);
    background: linear-gradient(to bottom, rgba(255, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.1) 100%);
    content: "";
    display: block;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
}

---
.footer-menu__link:not(:first-child) {}

.footer-menu {
    &__link {
        &:not(:first-child) {}
    }
}

 <div class="footer-menu">
                    <a href="#" class="footer-menu__link">УСЛУГИ</a>
                    <a href="#" class="footer-menu__link">ГАЛЕРЕЯ РАБОТ</a>

