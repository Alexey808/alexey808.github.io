### ФЛЕКСЫ ###

	align-content -> Выравнивает строки внутри флекс-контейнера при наличии свободного пространства по вертикальной оси.
		/* align-content: flex-start|flex-end|center|space-between|space-around|stretch */
		flex-start - Строки располагаются в начале вертикальной оси в верхней части контейнера. Каждая следующая строка идёт вровень с предыдущей.
		center - Строки располагаются по центру контейнера.
		flex-end - Строки располагаются начиная с конца вертикальной оси в нижней части контейнера. Каждая предыдущая строка идёт вровень со следующей.
		space-between - Строки равномерно распределены в контейнере и расстояние между ними одинаково. Если 2 строки, одна сверху другая в самом низу.
		space-around - Строки равномерно распределяются таким образом, чтобы пространство между двумя соседними строками было одинаковым.
		stretch - Строки равномерно растягиваются, заполняя свободное пространство.

		.flex-container {
	    	width: 70px;
	    	height: 240px;
	    	border: 1px solid #333;
	    	padding: 10px;
	    	display: flex;
	    	flex-wrap: wrap;
	    	align-content: center;
   		}

	align-items -> Выравнивает флекс-элементы по вертикальной оси внутри контейнера.
		/* align-items: flex-start | flex-end | center | baseline | stretch */
		flex-start - Флексы выравниваются по верхнему краю контейнера.
		center - Флексы выравниваются по центральной оси
		flex-end - Флексы выравниваются по нижнему краю контейнера.
		stretch - Флексы растягиваются таким образом, чтобы занять всё вертикальное пространство контейнера.
		baseline - Флексы выравниваются по их базовой линии.

		.flex-container {
		    display: flex;
		    align-items: stretch; /* Растягиваем по вертикали */
	   	}
	   	.flex-item {
		    margin-left: 1rem; /* Расстояние между блоками */
		    padding: 10px; /* Поля вокруг текста */
		    width: 33.333%; /* Ширина блоков */
	   	}
	   	.flex-item:first-child { margin-left: 0; }
	   	.item1 { background: #F0BA7D; }
	   	.item2 { background: #CAE2AA; }
	   	.item3 { background: #A6C0C9; }
	   	...
		<div class="flex-container">
		   <div class="flex-item item1"></div>
		   <div class="flex-item item2"></div>
		   <div class="flex-item item3"></div>
		</div>

	align-self -> Задаёт выравнивание отдельного элемента в контейнере по поперечной оси.
		/* align-self: flex-start | flex-end | center | baseline | stretch */
		flex-start - Элемент выравнивается по верхнему краю контейнера.
		flex-end - Элемент выравнивается по нижнему краю контейнера.
		center - Элемент выравнивается по центральной оси.
		baseline - Элемент выравнивается по базовой линии текста.
		stretch - Элемент растягивается таким образом, чтобы занять всё вертикальное пространство контейнера.
		
		.flex-item:hover { 
     		align-self: stretch; /* Растягиваем при наведении */
   		}

	flex-basis -> Свойство flex-basis определяет основу флекса, которая является начальным размером элемента.
		/* flex-basis: auto | <ширина> */
		.flex-container {
		    display: flex; /* Флексы */
		    height: 300px; /* Высота */
		    color: #fff; /* Белый цвет текста */
		    font-size: 2.6em; /* Размер шрифта */
		    flex-flow: column wrap; /* Располагаем в виде колонок */
	   	}
	   	.flex-item {
		    display: flex; /* Флексы */
		    align-items: center; /* Выравнивание текста по вертикали */
		    justify-content: center; /* Выравнивание текста по горизонтали */
	   	}
	   	.one {
		    background: #508694; /* Цвет фона */
		    margin-right: 10px; /* Отступ справа */
		    flex-basis: 100%;
		    order: 1; /* Первый блок */
	  	}
	   	.two {
		    background: #BB844C; /* Цвет фона */
		    margin-bottom: 10px; /* Отступ снизу */
		    flex: 1 1 0;
		    order: 2; /* Второй блок */
	   	}
	   	.three {
		    background: #929D79; /* Цвет фона */
		    flex: 1 1 0;
		    order: 3; /* Третий блок */
	   	}
	   	...
		<div class="flex-container">
		   	<div class="flex-item one">Первый</div>
		   	<div class="flex-item two">Второй</div>
		   	<div class="flex-item three">Третий</div>
	  	</div>

	flex-direction -> Свойство flex-direction определяет, как флексы располагаются в контейнере относительно основных осей и их направление.
		/* flex-direction: row | row-reverse | column | column-reverse */
		row - Главная ось направлена так же, как и ориентация текста, по умолчанию слева направо. Если значение dir задано как rtl, то направление оси идёт справа налево.
		row-reverse - Похоже на значение row, но меняются местами начальная и конечная точки и главная ось направлена справа налево. Если значение dir задано как rtl, то направление оси идёт слева направо.
		column - Главная ось располагается вертикально и направлена сверху вниз.
		column-reverse - Главная ось располагается вертикально, но меняется положение начальной и конечной точек и ось направлена снизу вверх.

		flex-direction: row-reverse;