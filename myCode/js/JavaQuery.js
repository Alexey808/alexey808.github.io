Библиотека кружков
	https://github.com/aterrien/jQuery-Knob
	http://smartlanding.biz/jquery-knob-animaciya-chisel-s-progress-barom.html


посмотреть
	http://www.dejurka.ru/web-design/40_jquery_plugins/
	
======= СОДЕРЖАНИЕ =================================================================================
	1(1) Выборка.
	2(1) Спец функция DOM дерева.
	3(1) Автоматические циклы.
	1(2) Методы text() hide() show().
	2(2) Методы width() height().
	3(2) Метод html() Изменение html кода.
	4(2) Методы fadeOut() fadeIn().
	5(2) Метод fadeTo().
	6(2) Методы slideUp() и slideDown().
	7(2) Методы attr().
	8(2) Метод addClass() и removeClass().
	9(2) Метод css() для получения свойств нужно писать полное значение, а для передачи можно сокращённые.
	10(2) Функция animate().
	11(2) Функции before(), prepend(), after() и append().
	12(2) Функция each() и понятие $(this).
	13(2) Функция size() и доступ к элементу выборки.
	14(2) Функции clone() и  remove().
	15(2) Наборы элементов.
	1(3) Объект-действие-событие.
	2(3) Находим объект, присвоисть событие, прописать нужные действия.
	3(3) События машь наведена и мыш уведена.
	4(3) Объект событие.
	5(3) Отмена события, метод preventDefault().
	6(3) Отбор элементов форм.
	7(3) Отбор активных элементов форм.
	8(3) Узнаём что ввёл пользователь в форму.
	9(3) Событие submit().


==== 1. ВЫБОРКА: ===================================================================================
	$('p');                         //выбираем по названию тега
	$('#maindiv');                  //выбираем по идентификатору
	$('.maindiv');                  //выбираем по названию классаклассу
	$('#div_for_img img');          //выборка по вложенным селекторам
	$('#main_h1 + p');              //выбираем следующий тег тоесть p в объекте main_h1
	$('#div_for_img > img');        //выбираем дочерних тегов
	$('img[width = 200]');          //выбор по атрибутам //выбираем все картинки с шириной в 200px
	$('a[href ^= http]');           //выбор по начальному значению //выбрать все ссылки начинающих с http
	$('img[src $= .jpg]');          //выбор по конечному значению //выбор все картинки с расширением jpg
	$('img[src *= moto');           //выбор все изображения у которых в src встречаеться слово moto
------- 1.1 ФИЛЬТРЫ ВЫБОРКИ: -----------------------------------------------------------------------
	$('#moto_table tr:odd');        //ввыбрать нечётные строки таблицы
	$('#moto_table tr:even');       //ввыбрать чётные строки таблицы
	$('img:not(#div_for_img img)'); //выбрать все картинки кроме тех которые находяться в #div_for_img
	$('div:has(fieldset)');         //фильтр элементов который содержит другие элементы
	$('p:contains(мотоцикл');       //фильтр по содержанию определённого текста//отобрать все абзацы(p) которые имею слово мотоцикл
	$('#div_for_img img:first');    //выбирает первую картинку в блоке с индентификатором div_for_img
	$('#div_for_img img:last');     //выбрать последнюю картинку в блоке с индентификатором div_for_img
	$('div:hidden');                //только скрытые элементы //выбрать все скрытые блоки 
	$('div:visibility');            //только видимые элементы //выбрать все видимые блоки
	
------- 1.2 СОЗДАНИЕ ВЫБОРОК ИЗ ЭЛЕМЕНТОВ ФОРМ -----------------------------------------------------
	:input - выбирает все элементы, которые влияют на ввод данных в форме
	:checkbox - поля ввода, которые сделанны как <input type="checkbox"..
	:radio - поля ввода, которые сделанны как <input type="radio"..
	:submit - поля ввода, которые сделанны как <input type="submit"..
	:reset - поля ввода, которые сделанны как <input type="reset"..
	:file - поля ввода, которые сделанны как <input type="file"..
	:button - поля ввода, которые сделанны как <input type="button"..
	:password - поля ввода, которые сделанны как <input type="password"..
	:image - поля ввода, которые сделанны как <input type="image"..
	:text - поля ввода, которые сделанны как <input type="text"..


====== 2. МЕТОДЫ: ==================================================================================
	Метод remove() - удаляет элемент из DOM дерева, но позволяет сохранить его для дальнейшего использования
	Метод clone() - клонирует выбранный элемент.
	Метод get() - позволяет получить доступ к конкретному элементу в выборке.
	Метод size() - возращает кол-во элементов в выборке.
	Метод each() - перебор каждого элемента выборки. $(this) - текущий элемент при использовании перебора.
	Метод append() - Добовляет контент внутрь выбранного элемента после всего остального контента
	Метод prepend() - Добовляет контент внутрь выбранного элемента до всего остального контента
	Метод after() - добовляет контент после выбранного элемента
	Метод before() - Добовляет контент до выбранного элемента.
	Метод animate() - Плавное изменение css свойств элемента (анимация).
	Метод css() - Получить/Изменить значение css свойств элемента
	Метод addClass() - Удалить класс у элемента(ов) набора
	Метод removeClass() - Удалить класс у элемента(ов) набора
	Метод reboveAttr() - Удалинеи атрибута
	Метод attr() - Получение или изменение значения атрибута
	Метод slideDown() - Появление элемента (по направлению от вверха к низу)
	Метод slideUp() - Исчезновение элемента (по направлению от низа к верху)
	Метод fadeTo() - Изменение прозрачности элемента до опр. значения за опр. время
	Метод fadeIn() - Плавное появление
	Метод fadeOut() - Плавное исчезновение
	Метод html() - Получение и изменение HTML кода
	Метод width() - Узнать/Изменить значение ширины объекта
	Метод height() - Узнать/Изменить значение высоты объекта
	Метод show() - Показать элемент
	Метод hide() - Спрятать элемент
	Метод text() - Получение и изменение текста

======= 3. СОБЫТИЯ: ================================================================================
------- 3.1 ОСТАНОВКА СОБЫТИЙ или ОБЪЕКТЫ СОБЫТИЯ --------------------------------------------------
	return false; - останавливает событие
	preventDefault() - предотврощает событие, прзволяет заменить предотврощенное

------- 3.2 ИНФОРМАЦИЯ ИЗ ОБЪЕКТА ------------------------------------------------------------------
	target - Объект отреагировавший на событие   
	shiftKey - Была ли нажата клавиша shift
	ctrlKey - Была ли нажата клавиша ctrl
	altKey - Была ли нажата клавиша alt
	screenX - расстояние от края монитора по горизонтали
	screenY - расстояние от края монитора по вертикали
	pageX - расстояние от края браузера по горизонтали
	pageY - расстояние от края браузера по вертикали

------- 3.3 СОБЫТИЯ JQUERY -------------------------------------------------------------------------
	hover (function1, function2) - наведение и увод мыши с обхекта в одном флаконе
	toggle (function1, function2) - переключатель

------- 3.4 СОБЫТИЯ ОКНА БРАУЗЕРА ------------------------------------------------------------------
	load - загрузки, когда браузер всё загрузит происходит это событие
	resize - и изменение размера окна браузера
	scroll - наступает когда прокручиваем сайт
	unload - выгрузка

------- 3.5 СОБЫТИЯ С ФОРМАМИ ----------------------------------------------------------------------
	submit - при отправке форм
	focus - фокус
	blur - когда поле теряет событие
	change - при изменении состояния элемента(к примеру ввёл букву)
	reset - сброс (к примеру формы)

------- 3.6 СОБЫТИЯ КЛАВИАТУРЫ ---------------------------------------------------------------------
	keypress - нажатие кнопки
	keydown - нажали кнопку но не отпустили
	keyup - зажатую клавишу отпускаем 

------- 3.7 СОБЫТИЯ МЫШКИ --------------------------------------------------------------------------
	mousecver (мышь над)
	mauseout (мышь уходит)
	click (клик мышки)
	dblclick (два щелчка быстро)
	mousemove (движение мышки)
	mousdown (зажали мышь но не отпустили)
	maudup (зажали мыш и отпустили)





/* 1(1) Выборка. */
	jquery() - сокращённый вариант $() функция несёт в себе 3 функции: 
	1) отбирать нужные нам эелементы //выборка или набор
	2) позволяет прописывать события выбранным эелементам
	3) и совершать с этмими элементами различные действия

	jquery(); или $();

	спец обозначения:
	^ - начало
	$ - конец
	* - в любом месте

	фильтры(отсчёт начинается с 0): 
	even - чётное
	odd - нечётное

/* 2(1) Спец функция DOM дерева. */
	//эта конструкция позволяет построить сначало DOM дерево после чего будут использоваться все скрипты
	$(document).ready(function () {

	    //тут код

	});//конец ready


	/*сокращённый вариант*/
	$(function () {

	//тут код

	});//конец ready

/* 3(1) Автоматические циклы. */
	//выборка сразу всех лементов в div_for_img
	$(document).ready(function () {
	    $('#div_for_img img').hide(3000); //скрываем сразу все картинки в div_for_img
	});//конец ready
	
/* 1(2) Методы text() hide() show(). */
	$(document).ready(function () {
	    //hide(спрятать) show(показать) элемент --------------------------------
	    $('img[src*=img1]').hide(3000);
	    $('img[src*=img1]').show(3000);
	    //но вместе эти два медота лучше сделать так!...
	    var myImg = $('img[src*=img1]');
	    myImg.hide(3000);
	    myImg.show(3000);
	    //или ещё лучше так, с помощью цепных функций, экономит место!!!...
	    myImg.hide(3000).show(3000);
		//изменить текст --------------------------------------------------------
	    var textH1 = $('#main_h1').text('Текст, изменённый с помощью jQuery');
		//вывод текста заголовка h1 алертом -------------------------------------
	    var textH1 = $('#main_h1').text();
	    alert(textH1);
	});//конец ready

/* 2(2) Методы width() height(). */
	$(document).ready(function () {
	    //измене высота и ширины блока div_for_img
	    var divW = $('#div_for_img').height(130).width(815);
	    //если хотим узнать ширину, также можно узнать высоту
	    var divW = $('#div_for_img').width();
	    alert(divW)
	});//конец ready

/* 3(2) Метод html() Изменение html кода. */
	$(document).ready(function () {
	    $('#moto_models').html('<li>Харлей <strong>Дэвинсон</strong></li><li>Кроссовый мотоцикл</li><li>Гоночный мотоцикл</li><li>Концептуальный мотоцикл</li>');
	});//конец ready

/* 4(2) Методы fadeOut() fadeIn(). */
	$(document).ready(function () {
	    //плавное исчезновение и появления картинки
	    $('img[src*=img]').fadeOut(3000).fadeIn(3000);
	});//конец ready

/* 5(2) Метод fadeTo(). */
	$(document).ready(function () {
	    //картинка поменяет свою прозрачность на 90% за 3с, после чего вернёт свою прозрачность обратно за 3с
	    $('img[src*=img]').fadeTo(3000, 0.1).fadeTo(3000,1);
	});//конец ready

/* 6(2) Методы slideUp() и slideDown(). */
	$(document).ready(function () {
	    //плавное изчезновение картинки в верх за 4с, и её появление за 4с
	    $('img[src*=img]').slideUp(4000).slideDown(4000);
	});//конец ready

/* 7(2) Методы attr(). */
	//метод attr() показывает высоту картинки которая находиться в футоре, отображает тудаже
	$(document).ready(function () {
	    var fooHeight = $('img[src*=img6]').attr('height');
	    $('#forresults').text("Высота футера: " + fooHeight);
	});

	//attr() позволяет также изменить, изменяем отображение с 1 до 4 шт одновременно
	$(document).ready(function () {
	    $('#forresults').attr('size', 4);
	});

	//reboveAttr() позволяет удалить элемент кода html, удаляет атрибут title после чего добовляет другой title
	$(document).ready(function () {
	    $('#moto_table').removeAttr('title').attr('title','Новое значение');
	});

/* 8(2) Метод addClass() и removeClass(). */
	//добовляем класс с помощью addClass() 
	$(document).ready(function () {
	    $('#div_for_img + p').addClass('new');
	});
	//удаляем класс с помощью removeClass()
	$(document).ready(function () {
	    $('#moto_table').removeClass('mototable');
	});

/* 9(2) Метод css() для получения свойств нужно писать полное значение, а для передачи можно сокращённые. */
	//меняем цвет текста
	$(document).ready(function () {
	    $('#main_h1').css('color', '#3F4078'); 
	});
	//изменяем два свойства 1) вид записи
	$(document).ready(function () {
	    $('#main_h1').css('color', '#3F4078').css('font-size','19px');
	});
	//изменяем два свойства 2) вид записи, через литерал объекты. Пользоваться этим способом!
	$(document).ready(function () {
	    $('#main_h1').css({
	        'color':'#3F4078',
	        'font-size':'25px'
	    });
	});

/* 10(2) Функция animate(). */
	$(document).ready(function () {
	    $('#div_for_img')
	        .css({ 'border': '2px solid #cc0000' }) //создаём рамку для удобства 
	        .animate({ 'width': '310px' }, 4000, function () {alert('Готово!'); //медленно сжимаем и в конце с помощью функции выводим сообщение
	    });
	});

	$(document).ready(function () {
	    $('#main_h1')
	        .css({ 'border': '2px solid #cc0000' }) //создаём рамку для удобства 
	        .animate({ 'paddingTop': '70px' }, 5000, function () {
	            alert('Готово!'); //медленно сжимаем и в конце с помощью функции выводим сообщение
	        });
	});

/* 11(2) Функции before(), prepend(), after() и append(). */
	$(document).ready(function () {
	    var myDiv = $('#div_for_img').css({ 'border': '2px solid #cc0000' });
	    myDiv.before('<p>Данный абзац вставлен с помощью метода before()</p>'); //добовляем контент до выбранного элемента
	    myDiv.after('<p>Данный абзац вставлен с помощью метода after()</p>'); //добовляем контент после указанного элемента, в данном случае после блоком div_for_img
	    myDiv.prepend('<p>Данный абзац вставлен с помощью метода prepend()</p>'); //добовляем контент в нутро элемента, до остального кода 
	    myDiv.append('<p>Данный абзац вставлен с помощью метода append()</p>'); //добовляем контент в нутро элемента, после остального кода
	});

/* 12(2) Функция each() и понятие $(this). */
	//скрыть картинки которые меньше  150px
	$(document).ready(function () {
	    $('img').each(function () {       //пребираем каждый элемент
	        if ($(this).width() < 150) {  //выполняем проверку условий для каждого элемента
	            $(this).fadeOut(3000);    //применяем действие к отобранным элементам
	        }
	    });
	});

/* 13(2) Функция size() и доступ к элементу выборки. */
	//узнать сколько количество элементов на сайте, в данном случае дивок
	$(document).ready(function () {
	    myDiv = $('div').size();
	    alert(myDiv);
	});
	//получить доступ к конкретному элементу, в данном случае к первому блоку
	$(document).ready(function () {
	    myDiv = $('div').get(0);
	    alert(myDiv);
	});

/* 14(2) Функции clone() и  remove(). */
	//клонирует картинки с блока div_for_img после блока last
	$(document).ready(function () {
	    var myDiv = $('#div_for_img').clone();
	    $('#last').after(myDiv);
	});
	$(document).ready(function () {
	    var myDivka = $('#last').remove(); //удаляем объекты, помещая его в переменную
	    $('#main_h1').before(myDivka); //выставляем то что было в переменной перед main_h1
	});

/* 15(2) Наборы элементов. */
	$(document).ready(function () {
	    $('img[width=100], a[hred*=documents]').fadeOut(5000); //прячет все картинки с шириной 100px и все ссылки с словом documents
	    $('img[alt]').fadeOut(5000) //скрывает все эелементы к которых просто есть атрибут альт
	});

/* 1(3) Объект-действие-событие. */
	//при нажатии на картинку выводит сообщение с её шириной
	$(document).ready(function () {
	    var myMoto = document.getElementById('img_1');          //объект
	    function motoClick() {                                 //действие
	        alert("Ширина данной картинки: " + myMoto.width);
	    }
	    myMoto.onclick = motoClick;                            //событие
	});

/* 2(3) Находим объект, присвоисть событие, прописать нужные действия. */
	//при клике по картинкам вылазиет сообщение и при прокрутке тоже(в фаерфокс работает странно)
	$(document).ready(function () {
	    $('#div_for_img img').click(function () {
	        alert('Вы кликнули по картинке');
	    });
	    $(window).scroll(function () {
	        alert('Произошло событие прокрутки страницы');
	    });
	});

	//при клике копирует картинку и помещает в отдельный блок дивку
	$(document).ready(function () {
	    $('#div_for_img img').click(function () { //выбираем все картинки в div_for_img img и создаём в клике анонимную функцию
	        var moto = $(this).clone();           //та картинка которая откликнулась её клонируем
	        $('#forresults').append(moto);        //клонируюмую картинку помещаем в другой блок
	    });
	});

/* 3(3) События машь наведена и мыш уведена. */
	$(document).ready(function () {
	    $('#moto_table tr').hover(function () {
	        $(this).addClass('svet'); //при наведении мыши выполняеться это
	    },function () {
	        $(this).removeClass('svet'); //при уведении мыши выполняеться это
	    });
	    
	    //этот пример почемуто работает не правильно, должна быть пропадающая и появляющая по клику мышки таблица, в исходом примере была форма
	    $('#tableHide').toggle(function (){
	        $('#moto_table').fadeIn(1000);
	        $(this).text('Развернуть таблицу');
	    }, function () {
	        $('#moto_table').fadeOut(1000);
	        $(this).text('Свернуть таблицу');
	    });
	});//Конец ready

/* 4(3) Объект событие. */
	$(document).ready(function () {
	    $('#div_for_img').click(function (eventObject) { //когда происходит клик по картинке событие функц заноситься в переменную eventObject

	        var myObject = eventObject.target                               //Объект отреагировавший на событие
	        alert('Объект отреагировавший на событие: ' + myObject.id);     //выводим id отреагировавшего объекта
	   
	        alert('Была ли нажата клавиша shift: ' + eventObject.shiftKey); //Была ли нажата клавиша shift
	        alert('Была ли нажата клавиша ctrl: ' + eventObject.ctrlKey);   //Была ли нажата клавиша ctrl
	        alert('Была ли нажата клавиша alt: ' + eventObject.altKey);     //Была ли нажата клавиша alt
	        alert('Координата щелчка по оси Х: ' + eventObject.screenX);    //расстояние от края монитора по горизонтали
	        alert('Координата щелчка по оси Y: ' + eventObject.screenY);    //расстояние от края монитора по вертикали
	        alert('Координата щелчка по оси Х: ' + eventObject.pageX);      //расстояние от края браузера по горизонтали
	        alert('Координата щелчка по оси Y: ' + eventObject.pageY);      //расстояние от края браузера по вертикали
	      
	    });
	});

/* 5(3) Отмена события, метод preventDefault(). */
	$(document).ready(function () {
	    $('#superlink').click(function (eventObject) {
	        //return false; //останавливает событие
	        eventObject.preventDefault() //предотврощает событие
	        $('#forresults').append('<p>Вместо перехода по ссылке мы добавили абзац.</p>'); //замена предотвращённого события
	    });
	});

/* 6(3) Отбор элементов форм. */
	$(document).ready(function () {
	    $(':checkbox').fadeOut(5000); //выбираем все чекбоксы и скрываем за 5с
	    $(':radio').fadeOut(5000); //выбираем все радиокнопки и скрываем за 5с
	    $(':submit').fadeOut(5000); //выбираем все кнопки типа сабмет и скрываем за 5с
	    $(':reset').fadeOut(5000); //выбираем все кнопки сброса и скрываем за 5с
	    $(':file').fadeOut(5000); //выбираем все кнопки загрузки и скрываем за 5с
	    $(':button').fadeOut(5000); //выбираем все кнопки и скрваем за 5с
	    $(':password').fadeOut(5000); //выбираем все поля для ввода пароля и скрываем за 5с
	    $(':image').fadeOut(5000);//выбираем все кнопкикартинки и скрываем за 5с
	    $(':input').fadeOut(5000);//выбираем все элементы инпут и скрываем за 
	    $(':text').fadeOut(5000);//выбираем все поля для ввода текста и скрываем за 5с

	    $('#my_form :text').fadeOut(5000);//выбираем все поля для ввода текста в блоке my_form и скрываем за 5
	});

/* 7(3) Отбор активных элементов форм. */
	$(document).ready(function () {
	    $('#my_form :checked').fadeOut(5000);//скрываем активные checkbox и radio
	    $('#my_form :checkbox:radio').fadeOut(5000);//скрываем только отмеченные radio (:checkbox:radio пишеться слитно!)
	    $('#my_form #motoSelect :selected').fadeOut(5000);//скрываем последний выбранный Select
	});

/* 8(3) Узнаём что ввёл пользователь в форму. */
	$(document).ready(function () {
	    $('#checkButton').click(function () {
	        //alert($('#mytextarea').val()); //получаем введённое значение, проверяя алертом
	        //$('#mytextarea').val('Наше значение'); //получаем введённое значение в #mytextarea, проверяя алертом
	        //alert($('#motoSelect :selected').val()); //возращает выбранное в селекте значение
	        //alert($('#my_form :checked').val()); //возращает выбранное в селекте значение
	        //alert($('#my_form :radio:checked').val()); //возращает выбранное в радио кнопке значение, то что написанно в value
	        
	        //пройтись по всем активным чекбоксам и выводим значение value алертом
	        $(':checkbox:checked').each(function(){
	            alert($(this).val()); //возращает выбранное в селекте значение
	        });
	    });
	});

/* 9(3) Событие submit(). */
	//проверяем поле email если да отправим, если нет, то не отправляем
	$(document).ready(function () {
	    $('my_form').submit(function (eventObject) {
	        if($('#email').val()=="") {
	            eventObject.preventDefault();
	            alert('Вы не заполнили поле email!');
	        }
	    });
	});

	//подключаем к выбранному элементу email с помощью события focus() класс css onFocus и отключаем класс событием blur() при потере фокуса 
	$(document).ready(function () {
	    $('#email').focus(function(){ $(this).addClass('onFocus');}).blur(function(){$(this).removeClass('onFocus')});
	});

	//выбирая элементы в select меняються также элементы во втором select в зависимости от первого селекта
	$(document).ready(function () {
	    $('#motoSelect').change(function () {
	        var myChoice = $('#motoSelect :selected').val(); //выбор элемента пользователем

	        if (myChoice == 1) { //если был выбран первый желемент, тоесть мотоцикл то..
	            $('#daysSelect').html('<option value="1">1</option><option value="2">2</option>'); //..ставиться это значение во 2 селектре
	        }
	        else if (myChoice == 2) {
	            $('#daysSelect').html('<option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option>');
	        }
	        else if (myChoice == 3) {
	            $('#daysSelect').html('<option value="1">1</option>');
	        }
	        else if (myChoice == 4) {
	            $('#daysSelect').html('<option value="1">1</option><option value="2">2</option><option value="3">3</option>');
	        }

	    });
	});


	//при выборе эелемента в select становяться не доступные некоторые checkbox и подсвечиваеться его label 
	$(document).ready(function () {
	    $('#motoSelect').change(function () {
	        var myChoice = $('#motoSelect :selected').val(); //выбор элемента пользователем

	        if (myChoice == 4) { //если пользователь выбран первый эелемент в селекте то..
	            $('#bag').attr('disabled', 'disabled'); //..блокируем чекбокс
	            $('label[for=bag]').css('color','#cc0000'); //..подсвечиваем лейбл
	        }
	        else {
	            $('#bag').attr('disabled', false); //..а если переключили на другой элемент, блокировка с чекбокса снимаеться
	            $('label[for=bag]').css('color', '#646464'); //..подсвечиваем лейбл
	        }
	    });
	});

	//при выборе эелемента в select прячем один checkbox 
	$(document).ready(function () {
	    $('#motoSelect').change(function () {
	        var myChoice = $('#motoSelect :selected').val(); //выбор элемента пользователем

	        if (myChoice == 4) { //если пользователь выбран первый эелемент в селекте то..
	            $('#bag, label[for=bag]').hide(); //..блокируем чекбокс

	        }
	        else {
	            $('#bag, label[for=bag]').show(); //..а если переключили на другой элемент, блокировка с чекбокса снимаеться
	    
	        }
	    });
	});
