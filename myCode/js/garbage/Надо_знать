https://habrahabr.ru/post/231071/

1) Что такое native Javascript. Native(родной) тоесть родной js, решения задач родными методами. К примеру используя чистый ES


классы/прототипы
замыкания
декоратор
итератор
промисы
генераторы
	копозиции генераторов
прокси

------------------




!Promise.resolve используют, когда хотят построить асинхронную цепочку, и начальный результат уже есть.
!Одна из основных областей применения генераторов – написание «плоского» асинхронного кода.

-----------------------------------------------------------------------

#Подключение внешнего скрипта. [async,defer]
3232
#после загрузки этого скрипта будет дальше загружатся остальная часть страницы
<script src="z2.js"></script>
#скрипт загружется сразу как только полностью себя догрузит, может раньше остальных 
<script async src="z1-2.js"></script>
#скрипт может загрузится раньше страницы, но сохранит последовательность с другими js
<script defer src="z1-3.js"></script>

#Подключение внешнего скрипта. [async,defer]

  ## после загрузки этого скрипта будет дальше загружатся остальная часть страницы
  ```html 
  <script src="z2.js"></script>
  ```
  ## скрипт загружется сразу как только полностью себя догрузит, может раньше остальных
  ```html 
  <script async src="z1-2.js"></script>
  ```
  ## скрипт может загрузится раньше страницы, но сохранит последовательность с другими js
  ```html 
  <script defer src="z1-3.js"></script>
  ```

-





```css
body { background-color: black; }
```

```js
    function globalEval(code) { // объединим два способа в одну функцию
      window.execScript ? execScript(code) : window.eval(code);
    }

    var a = 1;

    (function() {

      var a = 2;

      globalEval(' alert(a) '); // 1, во всех браузерах

    })();
```

