# 1) Окружение: DOM, BOM и JS

	Итак, у нас есть DOM, BOM и, собственно, язык JavaScript, который даёт возможность управлять всем этим.

	Далее мы приступим к изучению DOM, поскольку именно документ занимает центральную роль в организации интерфейса, и работа с ним – сложнее всего.

# 2) Дерево DOM
	DOM-модель – это внутреннее представление HTML-страницы в виде дерева.
	Все элементы страницы, включая теги, текст, комментарии, являются узлами DOM.
	У элементов DOM есть свойства и методы, которые позволяют изменять их.
	IE8- не генерирует пробельные узлы.
	Кстати, DOM-модель используется не только в JavaScript, это известный способ представления XML-документов.

	В следующих главах мы познакомимся с DOM более плотно.

# 3) Работа с DOM из консоли
	Для поиска элементов в консоли есть два специальных метода:

	$$("div.my") – ищет все элементы в DOM по данному CSS-селектору.
	$("div.my") – ищет первый элемент в DOM по данному CSS-селектору.
	Более полная документация по методам консоли доступна на страницах Console API Reference для Chrome и Command Line API для Firebug, а также на firebug.ru.

# 4) Навигация по DOM-элементам
	В DOM доступна навигация по соседним узлам через ссылки:

	По любым узлам.
	Только по элементам.
	Также некоторые виды элементов предоставляют дополнительные ссылки для большего удобства, например у таблиц есть свойства для доступа к строкам/ячейкам.

# 5) Поиск: getElement* и querySelector* и не только
	Есть 6 основных методов поиска элементов DOM:

	Метод											Ищет по...		Ищет внутри элемента?	Поддержка
	getElementById						id						-											везде
	getElementsByName					name					-											везде
	getElementsByTagName			тег или '*'		✔											везде
	getElementsByClassName		классу				✔											кроме IE8-
	querySelector							CSS-селектор	✔											везде
	querySelectorAll					CSS-селектор	✔											везде

	Практика показывает, что в 95% ситуаций достаточно querySelector/querySelectorAll. Хотя более специализированные методы getElement* работают чуть быстрее, но разница в миллисекунду-другую редко играет роль.


	Кроме того:
	Есть метод elem.matches(css), который проверяет, удовлетворяет ли элемент CSS-селектору. Он поддерживается большинством браузеров в префиксной форме (ms, moz, webkit).
	Метод elem.closest(css) ищет ближайший элемент выше по иерархии DOM, подходящий под CSS-селектор css. Сам элемент тоже включается в поиск.
	Язык запросов XPath поддерживается большинством браузеров, кроме IE, даже 9-й версии, но querySelector удобнее. Поэтому XPath используется редко.

# 6) Внутреннее устройство поисковых методов

# 7)
# 8)
# 9)
# 10)
# 11)
# 12)
# 13)
# 14)
# 15)
# 16)
# 17)
# 18)
# 19)
# 20)













































































































































































































































































