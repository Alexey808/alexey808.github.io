### АНИМАЦИЯ ### 

	animation -> Универсальное свойство которое задаёт сразу несколько параметров анимации.
		/* animation: animation-name animation-duration animation-timing-function animation-delay animation-iteration-count animation-direction;
		Значения по умолчанию:     
			animation-name: none
			animation-duration: 0s
			animation-timing-function: ease
			animation-delay: 0s
			animation-iteration-count: 1
			animation-direction: normal
			animation-fill-mode: none
			animation-play-state: running */
		animation: none, 0s, ease, 0s, 1, normal, none, runing;

	animation-delay -> Устанавливает время ожидания перед воспроизведением анимации.
		/* animation-delay: <время> */ 
		-webkit-animation-delay: 1s; /* Воемя ожидания в 1с. -> */
	    -moz-animation-delay: 1s;
	    -o-animation-delay: 1s;
	    animation-delay: 1s; /* <- */

	animation-direction -> Устанавливает направление движения анимации.
		/* animation-direction: normal | alternate | reverse | alternate-reverse */
	    animation-direction: normal; /* Анимация идёт с самого начала, после завершения цикла возвращается к исходному состоянию. -> */
	    -webkit-animation-direction: normal; /* <- */
	    animation-direction: alternate; /* Анимация идёт с начала до конца, затем плавно возвращается в исходное положение. */
		animation-direction: reverse; /* Анимация идёт с конца цикла, после его завершения возвращается к исходному состоянию. */
	    animation-direction: alternate-reverse; /* Анимация идёт с конца до начала, затем плавно возвращается в исходное положение. */

	animation-duration -> Задаёт время в секундах или миллисекундах, сколько должна длиться анимация движения.
		/* animation-duration: <время> */
		animation-duration: 1s; /* Анимация длинной в 1 секунду */

	animation-fill-mode -> Определяет, какие стили должны применяться к элементу, когда анимация не проигрывается. Например, после её завершения или при остановке
		/* animation-fill-mode: none | forwards | backwards | both */	
		animation-fill-mode: none; /* К элементу не применяются какие-либо стили. */
		animation-fill-mode: forwards; /* К элементу по окончанию анимации применяется стиль последнего ключевого кадра. (см. animation-direction и animation-iteration-count)*/
		animation-fill-mode: backwards; /* К элементу применяется стиль первого ключевого кадра (см. animation-direction) */
		animation-fill-mode: both; /* К элементу применяются оба правила, как для forwards, так и для backwards. */

	animation-iteration-count -> Устанавливает, сколько раз должен проигрываться анимационный цикл до остановки.
		/* animation-iteration-count: infinite | <число> */	
		animation-iteration-count: infinite; 	/* бесконечный */
		animation-iteration-count: 10; 			/* 10 раз*/

	animation-name -> Устанавливает одну или несколько анимаций, которые применяются к элементу.
		/* animation-name: none | <идентификатор> [, none | <идентификатор>]* */

		animation-name: none; /* Отключает анимацию */

		-webkit-animation-name: spaceOutUp; /* Применение стилей к spaceOutUp -> */
		animation-name: spaceOutUp;
		@-webkit-keyframes spaceOutUp {
	    from {
	    	...
	    }
		@keyframes spaceOutUp {
	    from {
	    	...
	    } /* <- */

	animation-play-state -> Свойство определяет, проигрывать анимацию или поставить её на паузу.
		/* animation-play-state: running | paused */
		animation-play-state: running;	/* Запустить анимацию */
		animation-play-state: paused;	/* Поставить на паузу */

	animation-timing-function -> Устанавливает, по какой зависимости должна происходить анимация каждого цикла.
		/* animation-timing-function: ease | ease-in | ease-out | ease-in-out | linear | step-start | step-end | steps | cubic-bezier */
		animation-timing-function: linear; 	/* Одинаковая скорость от начала и до конца. -> */
		-webkit-animation-timing-function: linear; /* <- */
		animation-timing-function: ease; /* Анимация начинается медленно, затем ускоряется и к концу движения опять замедляется. */
		animation-timing-function: ease-in; /* Анимация медленно начинается, к концу ускоряется. Аналогично cubic-bezier(0.42,0,1,1). */
		animation-timing-function: ease-out; /* Анимация начинается быстро, к концу замедляется. Аналогично cubic-bezier(0,0,0.58,1). */
		animation-timing-function: ease-in-out; /* Анимация начинается и заканчивается медленно. Аналогично cubic-bezier(0.42,0,0.58,1). */
		animation-timing-function: step-start; /* Как таковой анимации нет. Стилевые свойства сразу же принимают конечное значение. */
		animation-timing-function: step-end; /* Как таковой анимации нет. Стилевые свойства находятся в начальном значении заданное время, затем сразу же принимают конечное значение. */
		animation-timing-function: steps(<число>, start | end) /* Ступенчатая функция, имеющая заданное число шагов. start — задаёт полунепрерывную снизу функцию. end — задаёт полунепрерывную сверху функцию.*/
		animation-timing-function: cubic-bezier; /* Задаёт функцию движения в виде кривой Безье */

	transition -> Универсальное свойство, которое определяет эффект перехода между двумя состояниями элемента, они могут быть установлены с помощью псевдоэлемента :hover или :active, а также динамически через JavaScript.
		/* transition: <переход> 
			<переход> = [ none | <transition-property> ] || <transition-duration> || <transition-timing-function> || <transition-delay>*/
	    -webkit-transition: top 1s ease-out 0.5s;
	    -moz-transition: top 1s ease-out 0.5s;
	    -o-transition: top 1s ease-out 0.5s;
	    transition: top 1s ease-out 0.5s;

	transition-delay -> Устанавливает время ожидания перед запуском эффекта анимации перехода.
		/* transition-delay: <время> */
		-webkit-transition-delay: 0.5s; /* Время ожидания перед запуском в 0.5с -> */
		-o-transition-delay: 0.5s;
		-moz-transition-delay: 0.5s;
		transition-delay: 0.5s; /* <- */

	transition-duration -> Задаёт время в секундах или миллисекундах, сколько должна длиться анимация перехода до её завершения.
		/* transition-duration: <время> */
		-webkit-transition-duration: 2s; /* Устанавливаем продолжительность анимации в 2с. -> */
	    -o-transition-duration: 2s;
	    -moz-transition-duration: 2s;
	    transition-duration: 2s; /* <- */

	transition-property -> Устанавливает имя стилевого свойства, значение которого будет отслеживаться для создания эффекта перехода.
		/* transition-property: none | all | <свойство> */
	    transition-property: top; /* Задаём свойство top. Если их много перечисляем через запятую. */
	    -webkit-transition-property: top;
	    -moz-transition-property: top;
	    -o-transition-property: top; /* <- */
	    transition-property: none; /* Никакое свойство не задано. */
	    transition-property: all; /* Все свойства будут отслеживаться. */

	transition-timing-function -> Устанавливает, насколько быстро должно изменяться значение стилевого свойство для которого применяется эффект перехода.
		/* transition-timing-function: ease | ease-in | ease-out | ease-in-out | linear | step-start | step-end | steps | cubic-bezier */
		transition-timing-function: ease; /* Анимация начинается медленно, затем ускоряется и к концу движения опять замедляется. Аналогично cubic-bezier(0.25,0.1,0.25,1).*/
		transition-timing-function: ease-in; /* Анимация медленно начинается, к концу ускоряется. Аналогично cubic-bezier(0.42,0,1,1). */
		transition-timing-function: ease-out; /* Анимация начинается быстро, к концу замедляется. Аналогично cubic-bezier(0,0,0.58,1). */
		transition-timing-function: ease-in-out; /* Анимация начинается и заканчивается медленно. Аналогично cubic-bezier(0.42,0,0.58,1). */
		transition-timing-function: linear; /* Одинаковая скорость от начала и до конца. */
		transition-timing-function: step-start; /* Как таковой анимации нет. Стилевые свойства сразу же принимают конечное значение. */
		transition-timing-function: step-end; /* Как таковой анимации нет. Стилевые свойства находятся в начальном значении заданное время, затем сразу же принимают конечное значение. */
		transition-timing-function: steps(<число>, start | end) /* Ступенчатая функция, имеющая заданное число шагов. start — задаёт полунепрерывную снизу функцию. end — задаёт полунепрерывную сверху функцию.*/
		transition-timing-function: cubic-bezier; /* Задаёт функцию движения в виде кривой Безье */
