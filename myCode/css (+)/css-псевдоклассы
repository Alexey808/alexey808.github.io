### ПСЕВДОКЛАССЫ ###

	Псевдокласс :active -> Определяет стиль активного элемента. Состояние элемента, которое происходит между щелчком и отпусканием клавиши мыши.
		/* Селектор:active { ... } */
		a:active {
	    	color: #f00; /* Цвет активной ссылки */ 
	   	} 

	Псевдокласс :checked -> Применяется к элементам интерфейса, таким как переключатели (checkbox) и флажки (radio), когда они находятся в положение «включено».
		/* Селектор:checked { ... } */
		==> :checked Пример 1
		input:checked + span {
	    	background: #fc0;
	   	}
	   	...
	   	 <p><input type="checkbox" name="a1"><span>Windows 7</span><br>
	  	<input type="checkbox" name="a2"><span>Windows Vista</span><br>
	  	<input type="checkbox" name="a3"><span>Windows XP</span><br>
	  	<== end :checked Пример 1

		input[type="radio"]:checked { ... } /* Применить ко всем радиофложкам */

		input[type="checkbox"]:checked { ... } /* Стиль применяется только ко включенным переключателям. */

		option:checked { ... } /* Стиль применяется только к выбранным элементам списка. */

	Псевдокласс :default -> Применяет стиль к элементам форм, которые установлены по умолчанию в группе похожих элементов.
		/* Селектор:default { ... } */
		:default { 
	    	background-color: lime; 
	   	} 

	Псевдокласс :disabled -> Применяет стиль к заблокированным элементам форм.
		/* Селектор:disabled  { ... } */
		textarea:disabled { ... } /* Блокирует поле textarea */

	Псевдокласс :empty -> Представляет пустые элементы, т. е. те, которые не содержат дочерних элементов, текста или пробелов.
		/* Селектор:empty  { ...  } */
		==> :empty /* к примеру в пустом элементе <p></p> будет ставится красный кубик */
		span:empty {
		    background: red;
		    padding: 3px;
		    margin-left: 7px;
		    display: inline-block;
	   	} 
	   	<== end :empty

	Псевдокласс :enabled -> Используется для применения стиля к доступным (не заблокированным) элементам форм.
		/* Селектор:enabled { ... } */
		input:enabled { background: red; }

	Псевдокласс :first-child -> Применяет стилевое оформление к первому дочернему элементу своего родителя.
		/* Селектор:first-child { ... } */
		B:first-child { /* Стиль будет применятся к первым элементам <b> */
	    	color: red;
	    }

	Псевдокласс :first-of-type -> Задаёт правила стилей для первого элемента в списке дочерних элементов своего родителя.
		/* Селектор:first-of-type  {  ...  } */
		==> :first-of-type Начало
		table {
		    border-collapse: collapse; /* Убираем двойные границы */
		    width: 100%; /* Ширина таблицы */
		    border-spacing: 0; /* Расстояние между ячеек */
	    }
	    td { 
		    border: 1px solid #6A3E14; /* Параметры рамки */
		    padding: 4px; /* Поля в ячейках */
	    }
	    tr:first-of-type {
		    background: #808990; /* Цвет фона */
		    color: #fff; /* Цвет текст */
	    }
	    td:first-of-type {
	    	background: #CFD6D3; /* Цвет фона */
	    }
	    ...
	    <table>
		    <tr> 
		    	<td>&nbsp;</td><td>1998</td><td>1999</td><td>2000</td><td>2001</td>
		    	<td>2002</td><td>2003</td>
		    </tr>
		    <tr> 
		    	<td>Нефть</td>
		    	<td>3</td><td>22</td><td>34</td><td>62</td><td>74</td><td>57</td>
		    </tr>
	    	<tr>
		    	<td>Золото</td>
		    	<td>4</td><td>13</td><td>69</td><td>72</td><td>56</td><td>47</td>
		    </tr>
		    <tr>
		    	<td>Дерево</td>
		    	<td>4</td><td>7</td><td>73</td><td>79</td><td>34</td><td>86</td>
	    	</tr>
	    </table>
	  	<== конец :first-of-type

	Псевдокласс :focus -> Определяет стиль для элемента, получающего фокус.
		/* Селектор:focus { ... } */
		/* В hrome нужно добавить <a href="1.html" tabindex="1">Ссылка</a> */
		#enter .form-text:focus {
	    	background: #ffe; /* Цвет фона */
	    	border: 1px solid #29B0D9; /* Параметры рамки */
	   	}

	Псевдокласс :fullscreen -> Псевдокласс :fullscreen применяется к элементам, когда браузер находится в полноэкранном режиме.
		/* Селектор:fullscreen { ... } */
		#msg:-ms-fullscreen { background: #6088a5; }
  		#msg:-webkit-full-screen { background: #6088a5; }
  		#msg:-moz-full-screen { background: #6088a5; }

	Псевдокласс :hover -> Определяет стиль элемента при наведении на него курсора мыши, но при этом элемент еще не активирован.
		/* Селектор:hover { ... } */
		a:hover {
    		background: #786b59; /* Цвет фона под ссылкой */ 
    		color: #ffe; /* Цвет ссылки */ 
    	} 

	Псевдокласс :in-range -> Применяется к элементам форм, у которых введённое пользователем значение находится в заранее заданном диапазоне. Сам диапазон устанавливается с помощью атрибутов min и max, они, соответственно, задают минимальное и максимальное значение.
		/* Селектор:in-range { ... } */
		input:in-range {
   	 		background: #e2edc1; /* Число в указанных пределах */
    	}
    	...
    	<form><p><input type="number" min="1" max="10" value="1"></p></form>

	Псевдокласс :indeterminate -> (+s) Задаёт стиль для элементов форм, таким как флажки и переключатели, когда они находятся в неопределённом состоянии.
		/* Селектор:indeterminate { ... } */
		:indeterminate { 
			background: limegreen; 
		}
		...
		<script>document.getElementsByTagName("input")[0].indeterminate = true;</script>

	Псевдокласс :invalid -> Применяется к полям формы, содержимое которых не соответствует указанному типу.
		/* input:invalid { ... } */
		input:invalid {
    		background: #fdd; /* Красный цвет фона */
    	}
    	input:valid {
    		background: #dfd; /* Зелёный цвет фона */
    	}
    	...
    	<p><input type="url" required></p>

	Псевдокласс :lang -> Определяет язык, который используется в документе или его фрагменте.
		/* Селектор:lang(<язык>) { ... } */
		q:lang(en) {
    		quotes: "\201C" "\201D"; /* Вид кавычек для английского языка */ 
   		}
   		q:lang(fr), q:lang(ru) { /* Вид кавычек для русского и французского языка */ 
    		quotes: "\00AB" "\00BB"; 
   		}

	Псевдокласс :last-child -> Задаёт стилевое оформление последнего элемента своего родителя.
		/* Селектор:last-child { ... } */
		.block :last-child { 
   			background: #dda458 url(image/line.png) repeat-x; /* Параметры фона */
    		height: 5px; /* Высота блока */
    	}

	Псевдокласс :last-of-type -> Задаёт правила стилей для последнего элемента в списке дочерних элементов своего родителя.
		/* Селектор:last-of-type { ... } */
		p:last-of-type:after {
    		content: " ◄"; /* Добавляем символ в конце текста */
    		color: #c00000; /* Цвет символа */
   		}

	Псевдокласс :link -> Применяется к ссылкам, которые ещё не посещались пользователем.
		/* Селектор:link { ... } */
   		a:link {
    		color: #0000d0; /* Цвет ссылок */
   		}

	Псевдокласс :not -> Задаёт правила стилей для элементов, которые не содержат указанный селектор.
		/* Селектор:not(<Селектор>) { ... } */
		input:not([type="submit"]) { /* стиль применится ко всем элементам <input> за исключением того, в параметрах которого установлено type="submit" */
    		border: 1px solid #ccc;
    		padding: 3px;
  		}

	Псевдокласс :nth-last-child -> Используется для добавления стиля к элементам на основе нумерации в дереве элементов.
		/* Селектор:nth-last-child(odd | even | <число> | <выражение>) {...} */
		td:nth-last-child(2n+1) { /* Применить стиль к td с нумерацией 1, 3, 5, 7, 9. Все нечётные элементы, аналог значения odd.*/
    		background: #f0f0f0; /* Цвет фона */
   		}

	Псевдокласс :nth-last-of-type -> Используется для добавления стиля к элементам указанного типа на основе нумерации в дереве элементов.
		/* Селектор:nth-last-of-type(odd | even | <число> | <выражение>) {...} */
    	td:nth-last-of-type(2n+1) { /* Применить стиль к td с нумерацией 1, 3, 5, 7, 9. Все нечётные элементы, аналог значения odd.*/
    		background: #f0f0f0;
    	}

	Псевдокласс :nth-of-type -> Используется для добавления стиля к элементам указанного типа на основе нумерации в дереве элементов.
		/* Селектор:nth-of-type(odd | even | <число> | <выражение>) {...} */
		img:nth-of-type(2n+1) { float: left; } /* Нечётные картинки по левому краю */
   		img:nth-of-type(2n) { float: right; } /* Чётные по правому краю */

	Псевдокласс :only-child -> Применяется к дочерним элементам, только если он единственный у родителя. Аналогичен использованию :first-child:last-child или :nth-child(1):nth-last-child(1).
		/* Селектор:only-child { ... } */
		/*В Safari до версии 3.0 псевдокласс :only-child воспринимается как :first-child.*/

	Псевдокласс :only-of-type -> Применяется к дочерним элементам указанного типа, только если он единственный у родителя. Аналогичен использованию :first-of-type:last-of-type или :nth-of-type(1):nth-last-of-type(1).
		/* Селектор:only-of-type { ... } */
			img:only-of-type {
	    	border: 2px solid red; /* Параметры рамки */
	    }

	Псевдокласс :optional -> Применяет стилевые правила к полю формы, у которого не задан атрибут required. Он позволяет выделять поля обязательные к заполнению.
		/* input:optional { ... } */
		input:optional {
    		opacity: 0.5; /* Полупрозрачность */
   		}

	Псевдокласс :out-of-range -> Применяется к полям форм, у которых введённое пользователем значение выходит из заданного диапазона. Псевдокласс работает только для тех полей, где пользователь может сам ввести значение, несмотря на ограничения.
		/* Селектор:out-of-range { ... } */
		input:out-of-range {
    		background: #f9c3d2; /* Цвет фона */
    	}

	Псевдокласс :read-only -> Применяется к полям формы, у которых задан атрибут readonly. Такое поле не может быть модифицировано и получить фокус. 
		/* input:read-only { ... } */
		input:read-only {
    		opacity: 0.3; /* Полупрозрачность */
   		}

	Псевдокласс :read-write -> Применяется к полям формы, доступных для изменения. является противоположным по своему действию :read-only
		/* input:read-write { ... } */
	   	input:read-write {
    		border: 1px solid green;
    	}

	Псевдокласс :required -> Применяет стилевые правила к элементу input, у которого установлен атрибут required. Он позволяет выделять поля обязательные к заполнению.
		/* input:required  {  ...  } */
		input:required {
    		border: 1px solid red; /* Красная рамка для обязательных полей */
   		}

	Псевдокласс :target -> Применяется к целевому элементу, иными словами, к идентификатору, который указан в адресной строке браузера.
		/* Селектор:target { ... } */
		h2:target {
    		background: #fc0; /* Цвет фона */
    		padding: 3px; 
   		}
   		...
   		<li><a href="#h1">История 1</a></li>
    	<li><a href="#h2">История 2</a></li>
     	<h2 id="h1">...</h2>
  		<h2 id="h2">...</h2>

	Псевдокласс :valid -> Применяется к полям формы, содержимое которых проходит проверку в браузере на соответствие указанному типу. Противоположное :invalid.
		/* input:valid { ... } */
		input:invalid {
   			background: #fdd; /* Красный цвет фона */
   		}
   		input:valid {
    		background: #dfd; /* Зелёный цвет фона */
  		}	

	Псевдокласс :visited -> Применяется к ссылкам, уже посещённым пользователем, и задаёт для них стилевое оформление.
		/* a:visited  {  ...  } */
		a:visited {
    		color: #900060; /* Цвет посещённых ссылок */
   		}